// rc4 algorithm
// run 100k random key
// plot results to excel.
// Shira Levy 305451833
// Yarden Hazan 308340348 

  /*IMPORTANT*/
// When running at the cmd enter plaintext as argument
// example: ./rc4 'Hello World'


#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <iostream>
#include <fstream>

#define N 256   // 2^8

using namespace std;

void swap(unsigned char *a, unsigned char *b) {
    int tmp = *a;
    *a = *b;
    *b = tmp;
}

int KSA(char *key, unsigned char *S) {

    int len = strlen(key);
    int j = 0;

    for(int i = 0; i < N; i++)
        S[i] = i;

    for(int i = 0; i < N; i++) {
        j = (j + S[i] + key[i % len]) % N;

        swap(&S[i], &S[j]);
    }

    return 0;
}

int PRGA(unsigned char *S, char *plaintext, unsigned char *ciphertext) {

    int i = 0;
    int j = 0;

    for(size_t n = 0, len = strlen(plaintext); n < len; n++) {
        i = (i + 1) % N;
        j = (j + S[i]) % N;

        swap(&S[i], &S[j]);
        int rnd = S[(S[i] + S[j]) % N];

        ciphertext[n] = rnd ^ plaintext[n];
    }

    return 0;
}

int RC4(char *key, char *plaintext, unsigned char *ciphertext, int size, int* out) {
    int index;
    unsigned char S[N];
    KSA(key, S);

    PRGA(S, plaintext, ciphertext);

    PRGA(S, plaintext, ciphertext);

    for(size_t i = 0, len = size; i < len; i++){
        index = ciphertext[i];
        out[index]++;
    }
    return 0;
}

int main(int argc, char *argv[]) {

    string s;
    char* key = new char[16];
    unsigned int number[4];
    int n=0;
    int* out = new int[256];            //int array - contain the number of times every number between 0-255 appeared
    memset(out,0,256*sizeof(*out));


    for(int l=0; l<100000;l++){
        n=0;

        //random key
        for(int j=0; j< (sizeof(number)/sizeof(int));j++){
            number[j] = rand()%10000 ;                     //get random number
            if(number[j] < 1000){
                number[j]+=5000;
            }

            s = to_string(number[j]);              // convert int to string
            strcpy(key+n,s.c_str());                //set the key
            n+=4;
        }

        if(argc < 2) {
            printf("Usage: %s <plaintext>", argv[0]);
            return -1;
        }

        unsigned char *ciphertext = (unsigned char *)malloc(sizeof(int) * strlen(argv[1]));

        RC4(key, argv[1], ciphertext, strlen(argv[1]),out);

    }

    // print output to file
    ofstream myfile;
    myfile.open ("example.txt");
    for(int j=0; j<256;j++){
        myfile << j<<","<<out[j]<<endl;
    }
    myfile.close();

    return 0;
}

